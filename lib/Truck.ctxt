#BlueJ class context
comment0.target=Truck
comment0.text=\r\n\ An\ abstract\ class\ representing\ a\ truck,\ extending\ Vehicle.\r\n\ Defines\ truck-specific\ properties\ like\ truck\ bed\ presence.\r\n\r\n\ @author\ Your\ Name\r\n\ @version\ 1.0,\ June\ 2025\r\n
comment1.params=hasTruckBed\ model\ make\ year\ type\ color
comment1.target=Truck(boolean,\ java.lang.String,\ java.lang.String,\ int,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Constructs\ a\ Truck\ with\ the\ specified\ attributes.\r\n\r\n\ @param\ hasTruckBed\ true\ if\ the\ truck\ has\ a\ truck\ bed,\ false\ otherwise\r\n\ @param\ model\ \ \ \ \ \ \ the\ model\ of\ the\ truck\r\n\ @param\ make\ \ \ \ \ \ \ \ the\ make\ of\ the\ truck\r\n\ @param\ year\ \ \ \ \ \ \ \ the\ year\ the\ truck\ was\ manufactured\r\n\ @param\ type\ \ \ \ \ \ \ \ the\ type\ of\ truck\ (e.g.,\ Pickup,\ Flatbed)\r\n\ @param\ color\ \ \ \ \ \ \ the\ color\ of\ the\ truck\r\n\ @throws\ IllegalArgumentException\ if\ any\ parameter\ is\ invalid\r\n
comment2.params=
comment2.target=boolean\ hasTruckBed()
comment2.text=\r\n\ Checks\ if\ the\ truck\ has\ a\ truck\ bed.\r\n\r\n\ @return\ true\ if\ the\ truck\ has\ a\ truck\ bed,\ false\ otherwise\r\n
numComments=3
